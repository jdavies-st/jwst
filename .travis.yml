os: linux
dist: xenial
language: python
python: 3.8.5

env:
  global:
    - CRDS_SERVER_URL=https://jwst-crds.stsci.edu
    - CRDS_PATH=/tmp/crds_cache
    - CRDS_CLIENT_RETRY_COUNT=3
    - CRDS_CLIENT_RETRY_DELAY_SECONDS=20

cache:
  - pip
  - directories:
    - /tmp/crds_cache

jobs:
  # Don't wait for allowed failures
  fast_finish: true

  include:
    - name: Python 3.9
      python: 3.9.0

    - name: Latest dependency versions w/coverage
      script:
        - pytest --cov-report=xml --cov=./
      after_success:
        - codecov -F unit

    - name: Oldest dependency versions
      python: 3.6.10
      before_install:
        - pip install . --no-deps
        - minimum_deps
      install:
        - pip install -U pip certifi
        - pip install -r requirements-min.txt -e .[test]
        # Since there is no version of stdatamodels on PyPI, install from
        # Github master until it is released to PyPI
        - pip install git+https://github.com/spacetelescope/stdatamodels

    - name: SDP dependencies in requirements-sdp.txt
      env:
        - CRDS_CONTEXT=jwst-edit
      install:
        - pip install -r requirements-sdp.txt -e .[test]

    - name: Dev dependencies in requirements-dev.txt
      install:
        - pip install -r requirements-dev.txt -e .[test]

    - name: Warnings treated as Exceptions
      script:
        - pytest -W error

    - name: Windows
      os: windows
      language: shell
      compiler: gcc
      before_install:
        - choco install python --version=3.8.5
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"

    - name: Documentation build
      install:
        - pip install -e .[docs]
      script:
        - sphinx-build -W docs docs/_build
      addons:
        apt:
          packages:
            - texlive-latex-extra
            - dvipng
            - graphviz

    - name: Code style check
      script:
        - flake8

    - name: Verify install_requires in setup.py
      install:
        - pip install -e .
      script:
        - verify_install_requires

    - name: Build distribution
      install:
        - pip install pep517 twine
      script:
        - python -m pep517.check .
        - python -m pep517.build .
        - twine check dist/*

    - name: Security check
      install:
        - pip install bandit
      script:
        - bandit -r jwst scripts -c .bandit.yaml -ll

  allow_failures:
    - name: Dev dependencies in requirements-dev.txt
      install:
        - pip install -r requirements-dev.txt -e .[test]

    - name: Warnings treated as Exceptions
      script:
        - pytest -W error

install:
  - pip install -e .[test]

script:
  - pytest
